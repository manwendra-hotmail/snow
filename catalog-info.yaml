apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: service-now
spec:
  type: service
  lifecycle: production
  owner: "manwendra-hotmail"
  system: service-now
  providesApis:
    - service-now-api
  tags:
    - itsm-SNOW
    - ocp-snow-integration
---
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: service-now
  tags:
    - servicenow
    - demo
spec:
  owner: "manwendra-hotmail"
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: service-now-api
  description: "servicenow"
spec:
  type: openapi
  lifecycle: production
  owner: "manwendra-hotmail"
  system: service-now
  definition:
    $text: ./openapi.yaml

apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: servicenow-fetch-template
  title: ServiceNow Fetch Template
  description: Fetch incidents from ServiceNow
  tags:
    - servicenow
    - fetch
spec:
  owner: "manwendra-hotmail"
  type: service
  parameters:
  - title: Provide table name information
    required:
     - tableName
    properties:
      tableName:
        title: Table Name
        type: string
        default: 'incident'
        description: Name of the ServiceNow table to fetch records from (e.g., incident)
  steps:
  - id: fetch
    name: Fetch Incident Tickets
    action: servicenow:now:table:retrieveRecords
    input:
      tableName: ${{ parameters.tableName }}

  - id: serialize
    name: serialize
    action: roadiehq:utils:serialize:json
    input:
      data:
        tickets: '${{ steps.fetch.output.result }}'
        
  - id: write
    name: Write
    action: roadiehq:utils:fs:write
    input:
      path: ./data.json
      content: ${{ steps.serialize.output.serialized }}

  - id: transform
    name: transform
    action: roadiehq:utils:jsonata:json:transform
    input:
      path: ${{ steps['write'].output.path }}
      expression: |
        $map($, function($v, $i, $a) {
          {
            "INC Number": "<a href='https://your-instance.service-now.com/nav_to.do?uri=incident.do?sys_id=" & $v.sys_id & "'>" & $v.number & "</a>",
            "Short Description": $v.short_description,
            "State": $v.state,
            "Assigned To": $v.assigned_to.display_value
          }
        })

  - id: writeTransformed
    name: Write Transformed Data
    action: roadiehq:utils:fs:write
    input:
      path: ./transformed_data.json
      content: ${{ steps.transform.output.result }}

  output: 
    text: 
      - title: Incidents
        content: |
           ${{ steps['writeTransformed'].output.path }}


---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: servicenow-create-template
  title: ServiceNow Create Template
  description: Create incidents within ServiceNow
  tags:
    - servicenow
    - create
spec:
  owner: "manwendra-hotmail"
  type: service
  parameters:
  - title: Provide mandatory details
    required:
     - tableName
     - shortDescription
    properties:
      tableName:
        title: Table Name
        type: string
        default: 'incident'
        description: Name of the table in ServiceNow (e.g., `incident`)
      shortDescription:
        title: Short Description
        type: string
        description: Summary of the record being created
  steps:
  - id: create
    name: Create Incident in ServiceNow
    action: servicenow:now:table:createRecord
    input:
      tableName: ${{ parameters.tableName }}
      requestBody:
        short_description: ${{ parameters.shortDescription }}
  output:
    ticketUrl: https://ibmksademo1.service-now.com/nav_to.do?uri=${{ parameters.tableName }}.do?sys_id=${{ steps.create.output.sys_id }}
    result: ${{ steps.create.output }}

---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: servicenow-modify-template
  title: ServiceNow Modify Template
  description: Modify details of an existing ticket in ServiceNow
  tags:
    - servicenow
    - modify
spec:
  owner: "manwendra-hotmail"
  type: service
  parameters:
  - title: Provide details to modify
    required:
     - tableName
     - sysId
     - shortDescription
    properties:
      tableName:
        title: Table Name
        type: string
        default: 'incident'
        description: Name of the table in ServiceNow (e.g., `incident`)
      sysId:
        title: Ticket Sys ID
        type: string
        description: Get ticket Sys ID from here - https://ibmksademo1.service-now.com/api/now/table/incident?sysparm_fields=sys_id,number
      shortDescription:
        title: New Short Description
        type: string
        description: New short description of the ticket
  steps:
  - id: modify
    name: Modify Incident in ServiceNow
    action: servicenow:now:table:modifyRecord
    input:
      tableName: ${{ parameters.tableName }}
      sysId: ${{ parameters.sysId }}
      requestBody:
        short_description: ${{ parameters.shortDescription }}
  output:
    ticketUrl: https://ibmksademo1.service-now.com/nav_to.do?uri=${{ parameters.tableName }}.do?sys_id=${{ parameters.sysId }}
    result: ${{ steps.modify.output }}


---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: servicenow-update-template
  title: ServiceNow Update Template
  description: Update details of an existing ticket in ServiceNow
  tags:
    - servicenow
    - update
spec:
  owner: "manwendra-hotmail"
  type: service
  parameters:
  - title: Provide details to update
    required:
     - tableName
     - sysId
     - shortDescription
    properties:
      tableName:
        title: Table Name
        type: string
        default: 'incident'
        description: Name of the table in ServiceNow (e.g., `incident`)
      sysId:
        title: Ticket Sys ID
        type: string
        description: Get ticket Sys ID from here - https://ibmksademo1.service-now.com/api/now/table/incident?sysparm_fields=sys_id,number
      shortDescription:
        title: New Short Description
        type: string
        description: New short description of the ticket
  steps:
  - id: update
    name: Update Incident in ServiceNow
    action: servicenow:now:table:updateRecord
    input:
      tableName: ${{ parameters.tableName }}
      sysId: ${{ parameters.sysId }}
      requestBody:
        short_description: ${{ parameters.shortDescription }}
  output:
    ticketUrl: https://ibmksademo1.service-now.com/nav_to.do?uri=${{ parameters.tableName }}.do?sys_id=${{ parameters.sysId }}
    result: ${{ steps.update.output }}


